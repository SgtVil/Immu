---
title: "EXHES IgAseq analysis"
author: "Document Author"
date: "`r Sys.Date()`"
output:
  prettydoc::html_pretty:
    theme: architect
    highlight: github
---
#Setup
```{r}
library(phyloseq)
library(tidyverse)
library(magrittr)
library(ggpubr)
library(ggsci)
library(vegan)
library(ade4)
library(parallel)
source("/home/remy/Documents/Microbiome/R/log_ratio.R")
source("/home/remy/Documents/Microbiome/R/ellipse_me.R")
source("/home/remy/Documents/Microbiome/R/collapse_IgAseq.R")
source("/home/remy/Documents/Microbiome/R/slide_z.R")
source("/home/remy/Documents/Microbiome/R/log_ratio.R")
source("/home/remy/Documents/Microbiome/R/neg_dispersion.R")
source("/home/remy/Documents/Microbiome/R/slide_z_modern.R")
source("/home/remy/Documents/Microbiome/R/slide_z_standard.R")
source("/home/remy/Documents/Microbiome/R/seq_table.R")
source("/home/remy/Documents/Microbiome/R/beta_diversity.R")
source("/home/remy/Documents/Microbiome/R/differential_abundance.R")
source("/home/remy/Documents/Microbiome/R/normalization.R")
theme_set(theme_minimal())
```

#Import and modify ps objects
```{r}
ps= readRDS("/home/remy/Documents/EXHES/Analysis/ps objects/ps final.rds")

meta = readxl::read_xlsx("/home/remy/Documents/EXHES/qualitative data EXHES cohort/202204 modification remy EXHES metadata.xlsx")
clinical_data = readxl::read_xlsx("/home/remy/Documents/EXHES/qualitative data EXHES cohort/202204 EXHES metadata 12 months.xlsx")
milk = readxl::read_xlsx("/home/remy/Dropbox/Remy Villette/EXHES Data/milk_comsumption_earlyaccess.xlsx")
data = readxl::read_xlsx("/home/remy/Documents/EXHES/Analysis/ps3.xlsx")
one_year = readxl::read_xlsx("/home/remy/Documents/EXHES/qualitative data EXHES cohort/202204 EXHES metadata 12 months.xlsx")
metadata = read.csv("/home/remy/Documents/EXHES/Analysis/2022-04 EXHES metadata birth and one years.csv")

tmp= merge(data, metadata, by.y=c( "child_id"), by.x=c("sample_id"),all.x=T)

# tmp=merge(tmp, one_year, by="family_id", all.x=T)
# tmp= merge(tmp, milk[,-1], by="family_id", all.x=T)
# 
# tmp= merge(tmp, clust2, by="child_id")
# tmp= tmp[which(!duplicated(tmp$names)),]
#  tmp =merge(data[,1:15], meta, by="family_id", all.x=T)
write.csv("2022-04 EXHES birth and one year metadata.csv", x = tmp)

data$names %in% tmp$names
tmp= tmp[which(!duplicated(tmp$child_id)),]
rownames(tmp)= tmp$names2
tax_table(ps)[,"ASV"]= paste(tax_table(ps)[,"Genus"], 1:length(tax_table(ps)[,"Genus"]), sep = "_")
sample_data(ps)= tmp
x= as.matrix(sample_data(ps)[,"names2"])
sample_names(ps)= x
saveRDS(file = "./ps objects/ps final.rds", object = ps)
ps = read_rds("/home/remy/Documents/EXHES/Analysis/ps objects/ps final.rds")
data= sample_data(ps)%>% as.matrix()%>% as.data.frame()
try=merge(data, data2[,c("child_id","cluster3", "sample_name")], by.x="sample_id.x", by.y="child_id", all.x=T)
try= try[which(!duplicated(try$V1)),]
rownames(try)=try$names2
sample_data(ps)=try
```
# rarefy by sample_id
```{r}
library(vegan)
s_tmp <- unique(ps@sam_data$sample_id)
ps_tmp2 <- NULL
for (c in s_tmp){
  s_tmp2 <- row.names(ps@sam_data[ps@sam_data$sample_id == c,])
  ps_tmp <- prune_samples(samples = s_tmp2, x = ps)
  if (length(s_tmp2)>1){
    speNum <- specnumber(ps_tmp@otu_table) # observed number of species
    # rowSums(ps_tmp@otu_table)
    raremax <- sort(unique(rowSums(ps_tmp@otu_table)),decreasing=FALSE)[1] # [1] is the same as min(rowSums(ps@otu_table))
    nonRarifiedRichness <- rarefy(ps_tmp@otu_table, max(rowSums(ps_tmp@otu_table)))
    # # nonRarifiedRichness==speNum
    nonRandomRarifiedRichness <- rarefy(ps_tmp@otu_table, raremax)
    rarifiedOTU <- rrarefy(ps_tmp@otu_table, raremax)
    # rowSums(rarifiedOTU)
    RarifiedRichness <- rarefy(rarifiedOTU, raremax)
    #View(rarifiedOTU@.Data)
    ps_tmp@otu_table <- rarifiedOTU
  }
  ps_tmp2 <- merge_phyloseq(ps_tmp2, ps_tmp)
  
}
rowSums(ps_tmp2@otu_table) %>% as.matrix() %>% View
rowSums(ps@otu_table) %>% as.matrix() %>% View
```

```{r}
tab = tmp %>% filter(sorted_type=="pos" & origine=="infant")
table(tab$clust, tab$timepoint)
```

# Run slide_z follow up 24 months
```{r}
tax_table(ps)[,"ASV"]= paste0("ASV", 1:length(tax_table(ps)[,"Species"]))
seq1= ps%>%
  transform_sample_counts(function(x)x/sum(x)) %>% subset_samples(cohort=="france" | cohort=="spain")

seq= seq_table(seq1, sample_name = "sample_name", sorting_names = "sample_sort", cols_to_keep = "all")


random_generation=list()
system.time(for(i in names(seq)){
  random_generation[[i]]= slide_z(seq[[i]], positive_sorted_sample = "pos", negative_sorted_sample = "neg_1", second_negative_sample = "neg_2", deltaX = 20, slide_version = "slide_z_modern", alpha = 0.05, plot = F, zero_treatment = "random generation") 
})

random_generation= collapse_IgAseq(random_generation)

random_gen_all= random_generation@ig_seq_all %>% separate(taxonomy, into=c("Reign","Phylum", "Order","Class","Family", "Genus","Species","ASV", "rest"), sep=" ") %>% separate(col = new, into=colnames(sample_data(ps)),sep=" " )
random_gen_all$alpha= ifelse(random_gen_all$score>1.96, "positively significative", ifelse(random_gen_all$score< -1.96, "negatively significative", "not significative"))

no_zero=list()
system.time(for(i in names(seq)[names(seq)!="H1014" &names(seq)!="4289"]){
  no_zero[[i]]= slide_z(seq[[i]], positive_sorted_sample = "pos", negative_sorted_sample = "neg_1", second_negative_sample = "neg_2", deltaX = 20, slide_version = "slide_z_modern", alpha = 0.05, plot = F, zero_treatment = "no zero") 
})

no_zero = collapse_IgAseq(no_zero)
no_zero_all= no_zero@ig_seq_all %>% separate(taxonomy, into=c("Reign","Phylum", "Order","Class","Family", "Genus","Species","ASV", "rest"), sep=" ") %>% separate(col = new, into=colnames(sampleData(ps)),sep=" " )
no_zero_all$alpha= ifelse(no_zero_all$score>1.96, "positively significative", ifelse(no_zero_all$score< -1.96, "negatively significative", "not significative"))


ggplot()+
  geom_boxplot(data = no_zero_all, aes(score, Genus), color="blue")+
  geom_boxplot(data = random_gen_all, aes(score, Genus), color="red", alpha=0.2)+
  facet_wrap(timepoint~Phylum, scales = "free_y")
```

```{r}
p1= ggplot(random_gen_all, aes(log2_ratio, abs(score)))+geom_point(aes(color=Phylum, size=pos+neg1), alpha=0.2)+
  geom_hline(yintercept =  1.96)+geom_vline(xintercept = c(-2,2))
  
p2=ggplot(no_zero_all, aes(log2_ratio, abs(score)))+geom_point(aes(color=Phylum, size=pos+neg1), alpha=0.2)+
  geom_hline(yintercept =  1.96)+geom_vline(xintercept = c(-2,2))
ggarrange(p1, p2)
```

# Birth
```{r}
seq1= ps%>% transform_sample_counts(function(x)x/sum(x)) %>% subset_samples(timepoint=="birth" )
birth= seq_table(seq1, sample_name = "sample_name", sorting_names = "sample_sort", cols_to_keep = "all")

lapply(1:59, function(x){
  i= birth[[x]]
  duplicated(rownames(i))%>% sum}
  )
random_generation=list()
system.time(for(i in names(birth)){
  random_generation[[i]]= slide_z(birth[[i]], positive_sorted_sample = "pos", negative_sorted_sample = "neg1", second_negative_sample = "neg2", deltaX = 20, slide_version = "slide_z_modern", alpha = 0.05, plot = F, zero_treatment = "random generation") 
  print(i)
})


birth_seq= collapse_IgAseq(random_generation)

birth_seq= birth_seq@ig_seq_all %>% separate(taxonomy, into=c("Reign","Phylum", "Order","Class","Family", "Genus","Species","ASV"), sep=" ") %>% separate(col = new, into=colnames(sample_data(ps)),sep="ยง" )
birth_seq$alpha= ifelse(birth_seq$score>1.96, "positively significative", ifelse(birth_seq$score< -1.96, "negatively significative", "not significative"))

for(g in unique(birth_seq$Phylum)){
  tmp = birth_seq %>% filter(timepoint=="birthtype") %>% filter(Phylum == g)

pdf(file =  paste0("./plots birth/Random generation/", g,  " random generation infant 24 months.pdf"), width = 10, height = 7)
  for(i in unique(tmp$Genus)){

 p=  tmp %>% filter(Genus==i)%>%
   drop_na(birthtype)%>%
ggplot( aes(score, x=paste0(Species,ASV)))+
  geom_boxplot()+
  geom_jitter(aes(color=alpha, size=log10_abundance), alpha=0.2)+
  geom_hline(yintercept = c(-1.96, 1.96))+
   facet_wrap(~cohort)+
  scale_color_manual(values= c("brown", "black", "darkgreen"))+
  labs(y= "IgA score", x= "ASV")+
  theme_classic()+
  theme(axis.text.x = element_text(angle=90, vjust=0.5), legend.position = "none", strip.text = element_text(face="bold", size=10))+
   labs(title = i)
 print(p)
 
}
dev.off()
}

birth_seq$timepoint= ifelse(birth_seq$cohort=="spain", "Day 60", "Day 1")
birth_seq %>% 
  filter(Genus=="Streptococcus" | Genus=="Staphylococcus" | Genus=="Enterobacter" | Genus=="Bifidobacterium" | Genus=="Bacteroides" | Genus=="Escherichia/Shigella" | Genus=="Enterococcus" | Genus=="Lactobacillus" | Genus=="Veillonella")%>%
ggplot( aes(log2_ratio, Species))+
  geom_violin(trim = F)+
  geom_boxplot(alpha=0, width=0.15)+
  geom_jitter(aes(fill=alpha, size=log10_abundance), alpha=0.2, width=0.2, shape=21, color="black")+
  geom_vline(xintercept = c(-1.96, 1.96))+
scale_fill_manual(values=c("brown","gray","darkgreen"))+
  facet_wrap(~timepoint, scales="free")+
  labs(x= "IgA score")+
  theme_classic()+
  theme(axis.text.x = element_text(angle=0, vjust=0.5, size = 5), 
        axis.text.y = element_text(size=5, face="bold"),
        legend.position = "none", 
        strip.text = element_text(face="bold", size=25),
        axis.title.y = element_blank(), 
        axis.title.x = element_text(size=20, face="bold"))
  
ggsave("./Figures/birht vs 2 months IgASeq.png", width=10, height=6)

birth_seq %>%
  filter(cohort!="spain")%>%
  filter(Phylum!="NA")%>%
  filter(alpha!="not significative")%>%
  ggplot(aes(log2_ratio, Class, color=score))+ 
  geom_boxplot()+
  geom_jitter()+
  scale_color_gradient2()+
  facet_grid(~Phylum, scales="free_y", space="free_y")

birth_seq %>%
  filter(Genus=="Enterobacter")%>%
  ggplot(aes(log2_ratio, ASV, color=Class))+ 
  geom_boxplot()
```

# 24 months infant
```{r}
seq2= subset_samples(ps, timepoint=="24_months" & origine=="infant") %>% transform_sample_counts(function(x)x/sum(x))


infant= seq_table(seq2, sample_name = "sample_name.x", sorting_names = "sample_sort", cols_to_keep = "all")


infant_seq=list()
system.time(for(i in names(infant)){
  infant_seq[[i]]= slide_z(infant[[i]], positive_sorted_sample = "pos", negative_sorted_sample = "neg1", second_negative_sample = "neg2", deltaX = 50, slide_version = "slide_z_modern", alpha = 0.05, plot = F, zero_treatment = "random generation") 
})
infant_seq = collapse_IgAseq(infant_seq)


infant_seq= infant_seq@ig_seq_all  %>% 
  separate(taxonomy, into=c("Reign","Phylum", "Order","Class","Family", "Genus","Species","ASV", "rest"), sep=" ") %>% 
  separate(col = new, into=colnames(sample_data(ps)),sep= "ยง" )
infant_seq$alpha= ifelse(infant_seq$score>1.96, "positively significative", ifelse(infant_seq$score< -1.96, "negatively significative", "not significative"))

# infant_seq= merge(infant_seq, clust2, by="child_id")

for(g in unique(infant_seq$Phylum)){
  tmp = try %>% filter(Phylum == g)

pdf(file =  paste0("./plots follow up/Random generation/", g,  "clusters asthma random generation infant 24 months.pdf"), width = 10, height = 7)
  for(i in unique(tmp$Genus)){

 p=  tmp %>% filter(Genus==i)%>% 
ggplot( aes(score, ASV))+
  geom_boxplot()+
  geom_jitter(aes(color=alpha, size=pos+neg1+neg2), alpha=0.2)+
  geom_hline(yintercept = c(-1.96, 1.96))+
   facet_wrap(~cluster3)+
  scale_color_manual(values= c("brown", "black", "darkgreen"))+
  labs(y= "IgA score", x= "ASV")+
  theme_classic()+
  theme(axis.text.x = element_text(angle=90, vjust=0.5), legend.position = "none", strip.text = element_text(face="bold", size=10))+
   labs(title = i)
 print(p)
 
}
dev.off()
}

 infant_seq %>% filter(Genus=="Alistipes" | Genus=="Ruminococcus" | Genus=="Faecalibacterium" | Genus=="Agathobacter" | Genus=="Lachnoclostridium" | Genus=="Veillonella" | Genus=="Akkermansia" | Genus=="Anaerostipes" | Genus=="Blautia" | Genus=="Agathobacter" | Genus=="Bacteroides") %>%
  filter(cohort=="france")%>% 
  ggplot( aes(score, paste(Genus, ASV)))+
  geom_violin(trim = F)+
  geom_boxplot(alpha=0, width=0.15)+
  geom_jitter(aes(color=alpha, size=log10_abundance), alpha=0.2, width=0.2, shape=20)+
  geom_vline(xintercept = c(-1.96, 1.96))+
  scale_color_manual(values= c("brown", "gray", "darkgreen"))+
  labs(y=  " IgA score", x= "ASV")
 
 infant_seq %>%
   filter(Genus=="Veillonella" | Genus=="Akkermansia" | Genus=="Anaerostipes" | Genus=="Blautia" | Genus=="Agathobacter" | Genus=="Intestinibacter"| Genus=="Lachnoclostridium" | Genus=='Ruminococcus') %>%
  ggplot( aes(score, paste(Species, ASV)))+
  geom_violin(trim = F)+
  geom_boxplot(alpha=0, width=0.15)+
  geom_jitter(aes(color=alpha, size=log10_abundance), alpha=0.2, width=0.2, shape=20)+
  geom_vline(xintercept = c(-1.96, 1.96))+
   facet_wrap(~Genus, scales="free")+
  scale_color_manual(values= c("brown", "gray", "darkgreen"))+
  labs(y=  " IgA score", x= "ASV")
 
 
 infant_seq %>% 
  filter(Genus=="Ruminococcus")%>%
  ggplot(aes(score, x=ASV))+
  geom_violin(trim = F)+
  geom_boxplot(alpha=0, width=0.15)+
  geom_jitter(aes(fill=alpha, size=log10_abundance), alpha=0.2, width=0.2, shape=21, colour="black")+
  geom_hline(yintercept = c(-1.96, 1.96))+
  scale_fill_manual(values= c("brown", "gray", "darkgreen"))+
  facet_wrap(~antibiotic_usage)+
    coord_flip()+
  labs(y=  " IgA score")+
  theme_classic()+
  theme(axis.text = element_text(angle=0, vjust=0.5, size=15, face="bold"), legend.position = "none", strip.text = element_text(face="bold", size=10), 
        axis.title.y = element_blank())
  
  ggsave(paste("./Figures/ firmicutes infant.png"), width = 10, height = 20)
  
  infant_seq %>% filter(Genus=="Anaerostipes")%>%

  ggplot(aes(score, x=ASV))+
  geom_violin(trim = F)+
  geom_boxplot(alpha=0, width=0.15)+
  geom_jitter(aes(fill=alpha, size=log10_abundance), alpha=0.2, width=0.2, shape=21, colour="black")+
  geom_hline(yintercept = c(-1.96, 1.96))+
  scale_fill_manual(values= c("brown", "gray", "darkgreen"))+
    coord_flip()+
  labs(y=  " IgA score")+
  theme_classic()+
  theme(axis.text = element_text(angle=0, vjust=0.5, size=15, face="bold"), legend.position = "none", strip.text = element_text(face="bold", size=10), 
        axis.title.y = element_blank())
# top 50

infant_seq %>% 
  arrange(desc(score))%>%
  group_by(Genus)%>%
  slice_max(order_by = Genus, n = 20) %>% 
  select(Genus) %>% unique
  top_n(n=20, wt=mean_score) %>%
  select(Genus) %>% unique()
  ggplot(aes(score, Genus))+
  geom_violin(trim = F)+
  geom_boxplot(alpha=0, width=0.15)+
  geom_jitter(aes(fill=alpha, size=log10_abundance), alpha=0.2, width=0.2, shape=21, colour="black")+
  geom_hline(yintercept = c(-1.96, 1.96))+
  scale_fill_manual(values= c("brown", "gray", "darkgreen"))





infant_seq$score= abs((infant_seq$score))
infant_wide= infant_seq %>% 
  select(ASV, score, names2, breastfeeding, birthtype, cluster3, infant_asthma, chest_hissing, food_allgery) %>%
  pivot_wider(names_from = ASV, values_from = score, id_cols = c(names2, cluster3, birthtype, breastfeeding, infant_asthma, chest_hissing, food_allgery), values_fill = 0)
infant_wide = infant_wide %>% filter(birthtype!="NA")
infant_pca = dudi.pco(vegdist(infant_wide[,-c(1:7)], method = "manhattan"), nf = 5, scannf = F)
infant_pca = dudi.pca(infant_wide[,-c(1:8)], nf = 5, scannf = F)
infant_bca= bca(infant_pca, factor(infant_wide$infant_asthma), scannf =F, nf=2)
s.class(infant_bca$ls, fac= factor(infant_wide$infant_asthma), col=tol21rainbow[c(1,12,20)], cstar = 0, clabel = 1, grid = F, cpoint=2)




# no NA
infant_wide2= infant_wide %>% filter(chest_hissing!="NA")
infant_pco = dudi.pco(vegdist(infant_wide2[,-c(1:7)], method = "euclidean"), nf = 5, scannf = F)
s.class(infant_pco$li, fac=factor(tmp$cluster), col=tol21rainbow[c(1,12,20)], cstar = 0, clabel = 0, grid = F, cpoint=2)
rownames(infant_wide)= infant_wide$names2

tmp =infant_wide[,-c(1:8)] %>% vegdist(., method="euclidean") %>% hclust(., method = "ward.D2")
plot(tmp)


tmp= kmeans(infant_pco$li, centers = 2)
cut= cutree(tmp, k=2)
infant_wide$cluster= cut

tmp1= data.frame(infant_pco$li, tmp$cluster, infant_wide2$chest_hissing)


ggplot(tmp1, aes(A1, A2, color=factor(tmp$cluster)))+
  geom_point(aes(shape=infant_wide2$chest_hissing), size=3)+
  stat_ellipse()

tmp1 %>%
  ggbarstats(x=infant_wide2.chest_hissing, tmp.cluster, bf.message = F)

ggplot(infant_wide, aes(cluster, fill=chest_hissing))+
  geom_bar()
infant_wide %>%
  ggbarstats(chest_hissing, cluster)

tmp =rbind(infant_bca$c1%>% arrange(-desc(CS1)) %>% slice(1:10), infant_bca$c1%>% arrange(desc(CS1)) %>% slice(1:10))
tmp %>%
  ggplot(aes(CS1, rownames(tmp)))+
  geom_col()+
  theme(text=element_text(size=25))
```


```{r}

infant_seq2 = infant_seq%>% filter(score>2) %>% select(ASV)

infant_seq2= infant_seq[infant_seq$ASV %in% infant_seq2$ASV,]

infant_wide= infant_seq2 %>% 
  select(ASV, score, names2, breastfeeding, birthtype, cluster3, infant_asthma, chest_hissing, food_allgery) %>%
  pivot_wider(names_from = ASV, values_from = score, id_cols = c(names2, cluster3, birthtype, breastfeeding, infant_asthma, chest_hissing, food_allgery), values_fill = 0)
infant_wide= infant_wide %>% filter(chest_hissing!="NA")

infant_pca = dudi.pco(vegdist(tmp[,-c(1:7)], method = "manhattan"), nf = 5, scannf = F)
infant_pca = dudi.pca(tmp[,-c(1:7)], nf = 5, scannf = F)

infant_bca= bca(infant_pca, factor(tmp$chest_hissing), scannf =F, nf=2)
s.class(infant_bca$ls, fac= factor(tmp$chest_hissing), col= c("black", "red", "green"), cstar = 0, clabel = 1, grid = F, cpoint=2)

tmp = infant_seq %>% filter(ellipse_level>0)%>%
  select(ASV, score, names2, breastfeeding, birthtype, cluster3, infant_asthma, chest_hissing, food_allgery) %>%
  pivot_wider(names_from = ASV, values_from = score, id_cols = c(names2, cluster3, birthtype, breastfeeding, infant_asthma, chest_hissing, food_allgery), values_fill = 0)


tmp = tmp %>% pivot_longer(names_to = "ASV", values_to = "score", cols=8:420)
filter(ASV=="Parasutterella_840"| ASV=="Erysipelotrichaceae_UCG-003_167")%>%
ggplot(aes(chest_hissing, score, fill=ASV))+
  geom_boxplot()+
  geom_jitter()
```

#  Mothers
```{r}
firmicutes = x1 %>% filter(origine=="mother") %>% filter(Phylum == "Firmicutes")


for(i in unique(firmicutes$Genus)){
  png(filename = paste0("./plots follow up/Mothers/",i,"_firmicutes mother 24 months.png"), width = 1000, height = 500)
 p=  firmicutes %>% filter(Genus==i)%>% drop_na(birthtype)%>%
   filter(birthtype=="C-section"| birthtype=="Vaginal")%>%
ggplot( aes(score, x=ASV))+
  geom_boxplot()+
  geom_jitter(aes(color=alpha, size=log10_abundance), alpha=0.2)+
  geom_hline(yintercept = c(-1.96, 1.96))+
  facet_wrap(~birthtype, scales = "free_x", nrow = 1)+
  scale_color_manual(values= c("brown", "black", "darkgreen"))+
  labs(y= "IgA score", x= "ASV")+
  theme_classic()+
  theme(axis.text.x = element_text(angle=30, vjust=0.5), legend.position = "none", strip.text = element_text(face="bold", size=10))
 print(p)
 dev.off()
}


actino = x1 %>% filter(origine=="mother") %>% filter(Phylum == "Actinobacteriota")


for(i in unique(actino$Genus)){
  png(filename = paste0("./plots follow up/",i,"_actinobacteria infant 24 months.png"), width = 1000, height = 500)
 p=  actino %>% filter(Genus==i)%>% drop_na(birthtype)%>%
   filter(birthtype=="C-section"| birthtype=="Vaginal")%>%
ggplot( aes(score, x=ASV))+
  geom_boxplot()+
  geom_jitter(aes(color=alpha, size=log10_abundance), alpha=0.2)+
  geom_hline(yintercept = c(-1.96, 1.96))+
  facet_wrap(~birthtype, scales = "free_x", nrow = 1)+
  scale_color_manual(values= c("brown", "black", "darkgreen"))+
  labs(y= "IgA score", x= "ASV")+
  theme_classic()+
  theme(axis.text.x = element_text(angle=30, vjust=0.5), legend.position = "none", strip.text = element_text(face="bold", size=10))
 print(p)
 dev.off()
}


verru = x1 %>% filter(origine=="infant") %>% filter(Phylum == "Verrucomicrobiota")


for(i in unique(verru$Genus)){
  png(filename = paste0("./plots follow up/",i,"_Verrucomicrobiota infant 24 months.png"), width = 1000, height = 500)
 p=  verru %>% filter(Genus==i)%>% drop_na(birthtype)%>%
   filter(birthtype=="C-section"| birthtype=="Vaginal")%>%
ggplot( aes(score, x=ASV))+
  geom_boxplot()+
  geom_jitter(aes(color=alpha, size=log10_abundance), alpha=0.2)+
  geom_hline(yintercept = c(-1.96, 1.96))+
  facet_wrap(~birthtype, scales = "free_x", nrow = 1)+
  scale_color_manual(values= c("brown", "black", "darkgreen"))+
  labs(y= "IgA score", x= "ASV")+
  theme_classic()+
  theme(axis.text.x = element_text(angle=30, vjust=0.5), legend.position = "none", strip.text = element_text(face="bold", size=10))
 print(p)
 dev.off()
}

```


```{r}
infantse
```

#Merge IgAseq and total stool
```{r}
tmp= france%>% psmelt
tmp$taxonomy_total= unite(tmp, col =taxonomy_total, Phylum:ASV, sep = "_")
try= merge(infant_seq, as.matrix(sample_data(france)[,c("child_id","cluster3", "cluster5")]), by="child_id")
try= try[which(!duplicated(try$ASV)),]
tmp = try %>% filter(Genus=="Escherichia/Shigella" | Genus=="Enterococcus" | Genus=="Staphylococcus" | Genus=="Bifidobacterium")

ggplot(try, aes(score, birthtype))+
  geom_boxplot()+
  geom_jitter(aes(size=pos+neg1+neg2, color=alpha))+
  geom_vline(xintercept = c(-1.96,1.96))+
  facet_wrap(~Genus)


unique(birth_seq$taxa) %in% unique(tmp$OTU) %>% sum
unique(tmp$OTU) %in% unique(birth_seq$taxa) %>% sum
length(unique(tmp$OTU))
length(unique(birth_seq$taxa))
tmp1=  seq1 %>% filter_taxa(function(x)(sum(x)==0), prune = T)

(taxa_names(tmp1) %in% taxa_names(france) %>% sum)/ taxa_names(tmp1) %>% length
tmp1$unique= paste(tmp1$child_id, tmp1$taxa)
tmp1 = merge(birth_seq[, c("taxa","child_id", "score", "pos", "neg1", "neg2")], tmp[, c("child_id", "OTU","Abundance")], by.x= c("child_id", "taxa"), by.y= c("child_id", "OTU"), all.x=T)

unique(birth_seq$taxa) %in% unique(tmp1$taxa) %>% sum
```










